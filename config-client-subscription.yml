elastic-query-service:
  version: v1
  custom-audience: subscription-service
  webclient:
    connect-timeout-ms: 10000
    read-timeout-ms: 10000
    write-timeout-ms: 10000
    max-in-memory-size: 10485760 # 10MB

server:
  port: 8183
  servlet:
    context-path: /

spring:
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9091/auth/realms/subscription
          jwk-set-uri: http://localhost:9091/auth/realms/subscription/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: 'subscription-service'
            client-secret: 'e9c2be3d-6802-4ba2-acd7-07bc8ee0c853'
            authorizationGrantType: client_credentials
        provider:
          keycloak:
            tokenUri: http://localhost:9091/auth/realms/subscription/protocol/openid-connect/token
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=subscription&binaryTransfer=true&reWriteBatchedInserts=true
    username: admin
    password: springCloud_Pwd!
    driver-class-name: org.postgresql.Driver
    platform: postgres
    schema: classpath:init-schema.sql
    data: classpath:init-data.sql
    initialization-mode: always

subscription-config:
  text-field: text

user-config:
  username: test
  password: springCloud_Pwd!
  roles: USER

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  paths-to-ignore: /api-docs, /actuator/**

management:
  endpoints:
    web:
      base-path: /actuator
      exposure.include: health, prometheus
      path-mapping.prometheus: metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      cache.time-to-live: 1ms
